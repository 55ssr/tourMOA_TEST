<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<sqlMap namespace="Member1">

	<typeAlias  alias="egovMap" type="egovframework.rte.psl.dataaccess.util.EgovMap"/>
	<typeAlias  alias="memberVO" type="tourMOA.service.MemberVO"/>

	<select id="memberDAO.selectCustIdDuplication" resultClass="java.lang.Integer">
		SELECT COUNT(*) FROM member
			WHERE id = '$id$'
	</select>
	
	<select id="memberDAO.findId" resultClass="java.lang.Integer">
		SELECT COUNT(id) FROM member
			WHERE name = '$name$' AND email = '$email$'
	</select>
	
	<select id="memberDAO.findPwRe" resultClass="java.lang.Integer">
		SELECT COUNT(pwd) FROM member
			WHERE id = '$id$' AND email = '$email$'
	</select>
	
	<select id="memberDAO.findIdDetail" resultClass="MemberVO">
		SELECT 
			id,pwd
		FROM 
			member
		WHERE name = '$name$' OR id = '$id$' AND email = '$email$'
	</select>
	
	<select id="memberDAO.loginSession" resultClass="java.lang.Boolean">
	
		SELECT * FROM MEMBER
			WHERE id = '$id$' AND pwd = '$pwd$'
	
	</select>
	
	 <select id="memberDAO.accountDetail" resultClass="MemberVO">
		SELECT 
				id,
				pwd,
				name,
				gender,
				email,
				phone,
				postnum1,
				addr11,
				addr12,
				to_char(birthday,'yyyy-mm-dd')as birthday ,
				tel,
				emailYn,
				mobileRcpYn,
				marry,
				mdate,
				job
		FROM  
				MEMBER
		WHERE id = '$id$'
	</select>
	
	<select id="memberDAO.accountPwReaffirm" resultClass="java.lang.Integer">
		SELECT 
			COUNT(*)
		FROM 
			MEMBER 
		WHERE 
			id='$id$' AND pwd ='$pwd$'
	</select>
		<select id="memberDAO.reserve" resultClass="MemberVO">
		SELECT 
			id
		 FROM 
		 	MEMBER 
		 WHERE 
		 	id='$id$' 
	</select>
	<select id="memberDAO.accountPwUpdate" resultClass="MemberVO">
		SELECT 
			id,pwd
		 FROM 
		 	MEMBER 
		 WHERE 
		 	id='$id$' 
	</select>
	
	<select id="memberDAO.adminMemberList" resultClass="egovMap">
	SELECT b.* FROM (
			SELECT 
				rownum rn, a.* FROM (
							SELECT	  unq
									, id
									, name
									, gender
									, phone
									, TO_CHAR(birthday, 'yyyy-mm-dd') birthday
									, email
									, TO_CHAR(rdate, 'yyyy-mm-dd') rdate
							FROM 
									member a 
									
							WHERE
									1=1 
									
							<isNotNull property="searchCondition">
								<isNotEmpty property="searchCondition">
									AND $searchCondition$ LIKE '%' || #searchKeyword# || '%' 	
								</isNotEmpty>
							</isNotNull>		
									ORDER BY name
									) a
						) b
		WHERE 
				rn >= #firstIndex# AND rn <![CDATA[<=]]> #lastIndex#
	
	</select>
	
	<select id="memberDAO.adminMemberTotal" resultClass="java.lang.Integer">
		SELECT COUNT(*) FROM member
		WHERE 1=1
			<isNotNull property="searchCondition">
				<isNotEmpty property="searchCondition">
				AND  $searchCondition$ LIKE '%' || #searchKeyword# || '%'
				</isNotEmpty>
			</isNotNull>
	</select>
	
	<insert id="memberDAO.insertMemberJoin">
		INSERT INTO MEMBER (	
							unq,
							id,
							pwd,
							name,
							gender,
							email,
							phone,
							tel,
							job,
							postnum1,
							addr11,
							addr12,
							birthday,
							emailYn,
							mobileRcpYn,
							marry,
							mdate,
							rdate,
							agree1,
							agree2
						) VALUES (
							SEQ_MEMBER_UNQ.nextval,
							'$id$',
							'$pwd$',
							'$name$',
							'$gender$',
							'$email$',
							'$phone$',
							'$tel$',
							'$job$',
							'$postnum1$',
							'$addr11$',
							'$addr12$',
							'$birthday$',
							'$emailYn$',
							'$mobileRcpYn$',
							'$marry$',
							'$mdate$',
							 sysdate,
							'$agree1$',
							'$agree2$'
						)
	</insert>
	<insert id="memberDAO.insertAdminJoin">
		INSERT INTO MEMBER (	
							unq,
							id,
							pwd,
							name,
							gender,
							email,
							phone,
							job,
							postnum1,
							addr11,
							addr12,
							birthday,
							emailYn,
							mobileRcpYn,
							marry,
							mdate,
							rdate
						) VALUES (
							SEQ_MEMBER_UNQ.nextval,
							'$id$',
							'$pwd$',
							'$name$',
							'$gender$',
							'$email$',
							'$phone$',
							'$job$',
							'$postnum1$',
							'$addr11$',
							'$addr12$',
							'$birthday$',
							'$emailYn$',
							'$mobileRcpYn$',
							'$marry$',
							'$mdate$',
							sysdate
						)
	</insert>
	
	<update id="memberDAO.accountDetailUpdate">
		UPDATE
			MEMBER
		SET
			gender='$gender$',
			email='$email$',
			phone='$phone$',
			postnum1='$postnum1$',
			addr11='$addr11$',
			addr12='$addr12$',
			birthday= '$birthday$' ,
			tel='$tel$',
			mdate = '$mdate$',
			emailYn = '$emailYn$',
			mobileRcpYn = '$mobileRcpYn$',
			marry='$marry$',
			job='$job$'
	    WHERE
	    	id = '$id$'
	</update>
	<update id="memberDAO.adminDetailUpdate">
		UPDATE
			MEMBER
		SET
			pwd = '$pwd$',
			gender='$gender$',
			email='$email$',
			phone='$phone$',
			postnum1='$postnum1$',
			addr11='$addr11$',
			addr12='$addr12$',
			birthday= '$birthday$' ,
			mdate = '$mdate$',
			emailYn = '$emailYn$',
			mobileRcpYn = '$mobileRcpYn$',
			marry='$marry$',
			job='$job$'
	    WHERE
	    	id = '$id$'
	</update>
	<update id="memberDAO.accountPwUpdateProc">
		UPDATE	
			MEMBER
		SET
			pwd ='$pwd$'
		WHERE
			id = '$id$'
	
	</update>
	<delete  id="memberDAO.adminMemberDelete">
		DELETE FROM member 
			WHERE
				id = '$id$'		
	</delete>
</sqlMap>